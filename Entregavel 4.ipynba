{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "8907b29a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "def get_file_path():\n",
    "    import os\n",
    "    # Load the data\n",
    "    if os.path.exists('/kaggle'):\n",
    "        file_path = '/kaggle/input/state-of-data-brazil-2023/State_of_data_BR_2023_Kaggle - df_survey_2023.csv'\n",
    "    else:\n",
    "        default_directory = '/home/nerton/TRABALHO/Projects/kaggle'\n",
    "        os.chdir(default_directory)\n",
    "        file_path = './input/state-of-data-brazil-2023⁄State_of_data_BR_2023_Kaggle.csv'\n",
    "    return file_path\n",
    "\n",
    "# Carregando o DataFrame\n",
    "file_path = get_file_path()\n",
    "df = pd.read_csv(file_path)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3bff3a6f",
   "metadata": {},
   "source": [
    "## Pré-processamento dos Dados\n",
    "\n",
    "Durante a preparação dos dados para análise, uma das etapas fundamentais foi a **transformação de variáveis quantitativas em qualitativas** por meio da construção de intervalos.\n",
    "\n",
    "### Categorização da Idade\n",
    "\n",
    "A variável **idade**, originalmente representada por valores numéricos contínuos, foi convertida em uma variável categórica chamada **`Faixa_Idade`**.  \n",
    "Para isso, foram definidos **intervalos fechados** que representam diferentes grupos etários, como:\n",
    "\n",
    "- Menores de 18 anos  \n",
    "- 18 a 25 anos  \n",
    "- 26 a 35 anos  \n",
    "- 36 a 45 anos  \n",
    "- 46 a 55 anos  \n",
    "- Acima de 55 anos  \n",
    "\n",
    "A função `pd.cut()` da biblioteca **pandas** foi utilizada para realizar a categorização, com o parâmetro `right=False`.  \n",
    "Esse parâmetro garante que o **limite inferior** de cada faixa seja incluído, enquanto o **limite superior** é excluído, evitando sobreposições entre intervalos.\n",
    "\n",
    "### Padronização de Variáveis Textuais\n",
    "\n",
    "Outras variáveis originalmente textuais também foram **padronizadas e tratadas como categorias**, a fim de facilitar a modelagem probabilística. As principais foram:\n",
    "\n",
    "- `('P1_b ', 'Gênero')` – Representa o **gênero** dos respondentes  \n",
    "- `('P1_m ', 'Área de Formação')` – Indica a **área de formação acadêmica**  \n",
    "- `('P2_r ', 'Forma de Trabalho')` – Informa se o profissional atua de forma **presencial, híbrida ou remota**  \n",
    "- `('P4_m ', 'Uso de LLMs')` – Indica se há **uso de modelos de linguagem (ex: ChatGPT)** no trabalho  \n",
    "\n",
    "Todas essas variáveis foram tratadas como **categóricas nominais**, o que as torna compatíveis com modelos como **Redes Bayesianas**, que operam com variáveis discretas.\n",
    "\n",
    "---\n",
    "\n",
    "Esse pré-processamento foi essencial para garantir a **consistência dos dados** e permitir uma **análise mais interpretável** dos fatores que influenciam a **faixa salarial** no setor de dados no Brasil.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "57552513",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'df' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[31m---------------------------------------------------------------------------\u001b[39m",
      "\u001b[31mNameError\u001b[39m                                 Traceback (most recent call last)",
      "\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[3]\u001b[39m\u001b[32m, line 39\u001b[39m\n\u001b[32m     30\u001b[39m trabalho_map = {\n\u001b[32m     31\u001b[39m     \u001b[33m'\u001b[39m\u001b[33mModelo 100\u001b[39m\u001b[33m%\u001b[39m\u001b[33m presencial\u001b[39m\u001b[33m'\u001b[39m: \u001b[33m'\u001b[39m\u001b[33mPresencial\u001b[39m\u001b[33m'\u001b[39m,\n\u001b[32m     32\u001b[39m     \u001b[33m'\u001b[39m\u001b[33mModelo 100\u001b[39m\u001b[38;5;132;01m% r\u001b[39;00m\u001b[33memoto\u001b[39m\u001b[33m'\u001b[39m: \u001b[33m'\u001b[39m\u001b[33mRemoto\u001b[39m\u001b[33m'\u001b[39m,\n\u001b[32m   (...)\u001b[39m\u001b[32m     35\u001b[39m     \u001b[33m'\u001b[39m\u001b[33mnan\u001b[39m\u001b[33m'\u001b[39m: \u001b[33m'\u001b[39m\u001b[33mNão informado\u001b[39m\u001b[33m'\u001b[39m\n\u001b[32m     36\u001b[39m }\n\u001b[32m     38\u001b[39m \u001b[38;5;66;03m# Aplicar mapeamentos\u001b[39;00m\n\u001b[32m---> \u001b[39m\u001b[32m39\u001b[39m df[\u001b[33m\"\u001b[39m\u001b[33mFormacao_Categorizada\u001b[39m\u001b[33m\"\u001b[39m] = \u001b[43mdf\u001b[49m[(\u001b[33m\"\u001b[39m\u001b[33m(\u001b[39m\u001b[33m'\u001b[39m\u001b[33mP1_m \u001b[39m\u001b[33m'\u001b[39m\u001b[33m, \u001b[39m\u001b[33m'\u001b[39m\u001b[33mÁrea de Formação\u001b[39m\u001b[33m'\u001b[39m\u001b[33m)\u001b[39m\u001b[33m\"\u001b[39m)].map(formacao_map)\n\u001b[32m     40\u001b[39m df[\u001b[33m\"\u001b[39m\u001b[33mForma_Trabalho_Categorizada\u001b[39m\u001b[33m\"\u001b[39m] = df[(\u001b[33m\"\u001b[39m\u001b[33m(\u001b[39m\u001b[33m'\u001b[39m\u001b[33mP2_r \u001b[39m\u001b[33m'\u001b[39m\u001b[33m, \u001b[39m\u001b[33m'\u001b[39m\u001b[33mAtualmente qual a sua forma de trabalho?\u001b[39m\u001b[33m'\u001b[39m\u001b[33m)\u001b[39m\u001b[33m\"\u001b[39m)].map(trabalho_map)\n\u001b[32m     43\u001b[39m \u001b[38;5;66;03m# =======================\u001b[39;00m\n\u001b[32m     44\u001b[39m \u001b[38;5;66;03m# USO DE IA GENERATIVA NO TRABALHO\u001b[39;00m\n\u001b[32m     45\u001b[39m \u001b[38;5;66;03m# =======================\u001b[39;00m\n\u001b[32m     46\u001b[39m \n\u001b[32m     47\u001b[39m \u001b[38;5;66;03m# Preencher valores nulos\u001b[39;00m\n",
      "\u001b[31mNameError\u001b[39m: name 'df' is not defined"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# =======================\n",
    "# CATEGORIZAÇÕES E AGRUPAMENTOS\n",
    "# =======================\n",
    "\n",
    "\n",
    "# Faixa etária\n",
    "bins = [0, 18, 25, 35, 45, 55, 65, 100]\n",
    "labels = [\"<18\", \"18-25\", \"26-35\", \"36-45\", \"46-55\", \"56-65\", \"65+\"]\n",
    "#df[\"Faixa_Idade\"] = pd.cut(df[\"('P1_a ', 'Idade')\"], bins=bins, labels=labels, right=False)\n",
    "\n",
    "# Mapeamento de Área de Formação\n",
    "formacao_map = {\n",
    "    'Computação / Engenharia de Software / Sistemas de Informação/ TI': 'Tecnologia',\n",
    "    'Outras Engenharias': 'Engenharias',\n",
    "    'Economia/ Administração / Contabilidade / Finanças/ Negócios': 'Negócios',\n",
    "    'Estatística/ Matemática / Matemática Computacional/ Ciências Atuariais': 'Exatas',\n",
    "    'Química / Física': 'Exatas',\n",
    "    'Ciências Biológicas/ Farmácia/ Medicina/ Área da Saúde': 'Saúde',\n",
    "    'Marketing / Publicidade / Comunicação / Jornalismo': 'Comunicação',\n",
    "    'Ciências Sociais': 'Sociais',\n",
    "    'Outra opção': 'Outra',\n",
    "    'nan': 'Não informado'\n",
    "}\n",
    "\n",
    "# Mapeamento de Forma de Trabalho\n",
    "trabalho_map = {\n",
    "    'Modelo 100% presencial': 'Presencial',\n",
    "    'Modelo 100% remoto': 'Remoto',\n",
    "    'Modelo híbrido com dias fixos de trabalho presencial': 'Híbrido fixo',\n",
    "    'Modelo híbrido flexível (o funcionário tem liberdade para escolher quando estar no escritório presencialmente)': 'Híbrido flexível',\n",
    "    'nan': 'Não informado'\n",
    "}\n",
    "\n",
    "# Aplicar mapeamentos\n",
    "df[\"Formacao_Categorizada\"] = df[(\"('P1_m ', 'Área de Formação')\")].map(formacao_map)\n",
    "df[\"Forma_Trabalho_Categorizada\"] = df[(\"('P2_r ', 'Atualmente qual a sua forma de trabalho?')\")].map(trabalho_map)\n",
    "\n",
    "\n",
    "# =======================\n",
    "# USO DE IA GENERATIVA NO TRABALHO\n",
    "# =======================\n",
    "\n",
    "# Preencher valores nulos\n",
    "col_ia = \"('P4_m ', 'Utiliza ChatGPT ou LLMs no trabalho?')\"\n",
    "df[col_ia] = df[col_ia].fillna(\"\")\n",
    "\n",
    "# Criar colunas binárias\n",
    "df[\"Usa_Gratuito\"] = df[col_ia].str.contains(\"gratuitas\", case=False)\n",
    "df[\"Usa_Copilot\"] = df[col_ia].str.contains(\"Copilot\", case=False)\n",
    "df[\"Usa_Pago_Pessoal\"] = df[col_ia].str.contains(\"pago do meu próprio bolso\", case=False)\n",
    "df[\"Usa_Pago_Empresa\"] = df[col_ia].str.contains(\"empresa em que trabalho paga\", case=False)\n",
    "df[\"Nao_Usa_IA\"] = df[col_ia].str.startswith(\"Não utilizo\", na=False)\n",
    "\n",
    "# Contar os usos\n",
    "uso_llms = df[[\"Usa_Gratuito\", \"Usa_Copilot\", \"Usa_Pago_Pessoal\", \"Usa_Pago_Empresa\", \"Nao_Usa_IA\"]].sum()\n",
    "\n",
    "# =======================\n",
    "# GRÁFICOS\n",
    "# =======================\n",
    "\n",
    "# Gráfico: Faixa Etária\n",
    "plt.figure(figsize=(10, 6))\n",
    "# Transformar em DataFrame\n",
    "# Calcular a contagem de valores para a coluna \"Faixa_Idade\"\n",
    "faixa_etaria_counts = df[\"Faixa_Idade\"].value_counts()\n",
    "\n",
    "faixa_etaria_df = faixa_etaria_counts.reset_index()\n",
    "faixa_etaria_df.columns = [\"Faixa_Idade\", \"Contagem\"]\n",
    "\n",
    "#sns.barplot(\n",
    "   # data=faixa_etaria_df,\n",
    "   # x=\"Faixa_Idade\",\n",
    "  #  y=\"Contagem\",\n",
    " #   palette=\"viridis\"\n",
    "#)\n",
    "\n",
    "#plt.title(\"Distribuição de Respondentes por Faixa Etária\", fontsize=14)\n",
    "#plt.xlabel(\"Faixa Etária\", fontsize=12)\n",
    "#plt.ylabel(\"Número de Respondentes\", fontsize=12)\n",
    "#plt.xticks(rotation=45)\n",
    "#plt.tight_layout()\n",
    "#plt.show()\n",
    "\n",
    "# Gráfico: Área de Formação\n",
    "#plt.figure(figsize=(10, 5))\n",
    "#sns.countplot(\n",
    "    #data=df,\n",
    "   # y=\"Formacao_Categorizada\",\n",
    "   # hue=\"Formacao_Categorizada\",\n",
    "   # order=df[\"Formacao_Categorizada\"].value_counts().index,\n",
    "  #  palette=\"mako\",\n",
    " #   legend=False\n",
    "#)\n",
    "#plt.title(\"Distribuição por Área de Formação\", fontsize=14)\n",
    "#plt.xlabel(\"Número de Respondentes\")\n",
    "#plt.ylabel(\"Área de Formação\")\n",
    "#plt.tight_layout()\n",
    "#plt.show()\n",
    "\n",
    "\n",
    "# Gráfico: Forma de Trabalho\n",
    "#plt.figure(figsize=(8, 5))\n",
    "#sns.countplot(\n",
    " #   data=df,\n",
    "  #  x=\"Forma_Trabalho_Categorizada\",\n",
    "   # hue=\"Forma_Trabalho_Categorizada\",\n",
    "    #order=df[\"Forma_Trabalho_Categorizada\"].value_counts().index,\n",
    "    #palette=\"rocket\",\n",
    "    #legend=False\n",
    "#)\n",
    "#plt.title(\"Distribuição por Forma de Trabalho\", fontsize=14)\n",
    "#plt.xlabel(\"Forma de Trabalho\")\n",
    "#plt.ylabel(\"Número de Respondentes\")\n",
    "#plt.xticks(rotation=20)\n",
    "#plt.tight_layout()\n",
    "#plt.show()\n",
    "\n",
    "\n",
    "# Gráfico: Uso de IA Generativa\n",
    "#plt.figure(figsize=(10, 5))\n",
    "\n",
    "# Transformar em DataFrame\n",
    "uso_llms_df = uso_llms.reset_index()\n",
    "uso_llms_df.columns = [\"Tipo_Uso\", \"Contagem\"]\n",
    "\n",
    "sns.barplot(\n",
    "    data=uso_llms_df,\n",
    "    x=\"Tipo_Uso\",\n",
    "    y=\"Contagem\",\n",
    "    palette=\"crest\"\n",
    ")\n",
    "\n",
    "#plt.title(\"Uso de Soluções de IA Generativa no Trabalho\", fontsize=14)\n",
    "#plt.xlabel(\"Tipo de Uso\")\n",
    "#plt.ylabel(\"Número de Respondentes\")\n",
    "#plt.xticks(rotation=20)\n",
    "#plt.tight_layout()\n",
    "#plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "818c21d4",
   "metadata": {},
   "source": [
    "## Representação Gráfica da Rede Bayesiana\n",
    "\n",
    "Para representar graficamente as relações probabilísticas entre as variáveis do estudo, foi elaborado o grafo da Rede Bayesiana com base em variáveis extraídas do conjunto de dados **\"State of Data BR 2023\"**. \n",
    "\n",
    "O objetivo central foi compreender como fatores como idade, gênero, área de formação, forma de trabalho e o uso de LLMs (como o ChatGPT) podem influenciar a **faixa salarial** dos profissionais de dados no Brasil.\n",
    "\n",
    "### Variáveis Consideradas\n",
    "\n",
    "- **Faixa etária** (a partir da categorização da idade)  \n",
    "- **Gênero**  \n",
    "- **Raça/Etnia**  \n",
    "- **Educação**  \n",
    "- **Área de formação**  \n",
    "- **Experiência em dados**  \n",
    "- **Nível profissional**  \n",
    "- **Cargo de gestão**  \n",
    "- **Tamanho da empresa**  \n",
    "- **Forma de trabalho** (presencial, híbrido ou remoto)  \n",
    "- **Uso de LLMs/IA no trabalho**  \n",
    "- **Faixa salarial** (variável alvo)\n",
    "\n",
    "### Relações Diretas no Grafo\n",
    "\n",
    "As seguintes relações foram definidas, assumindo que variáveis demográficas e profissionais influenciam diretamente a **faixa salarial**:\n",
    "\n",
    "#### Fatores Demográficos\n",
    "\n",
    "- Faixa etária → Faixa salarial  \n",
    "- Gênero → Faixa salarial  \n",
    "- Raça/Etnia → Faixa salarial  \n",
    "- Educação → Faixa salarial  \n",
    "\n",
    "#### Fatores Profissionais\n",
    "\n",
    "- Experiência em dados → Faixa salarial  \n",
    "- Nível profissional → Faixa salarial  \n",
    "- Cargo de gestão → Faixa salarial  \n",
    "- Tamanho da empresa → Faixa salarial  \n",
    "\n",
    "#### Fatores Modernos (IA e Trabalho Remoto)\n",
    "\n",
    "- Forma de trabalho → Faixa salarial  \n",
    "- Uso de IA → Faixa salarial  \n",
    "\n",
    "<!--\n",
    "### Relações Indiretas (Hipóteses exploratórias)\n",
    "\n",
    "- Experiência em dados → Nível profissional  \n",
    "- Educação → Cargo de gestão  \n",
    "- Setor → Uso de IA  \n",
    "-->\n",
    "\n",
    "### Estrutura da Rede\n",
    "\n",
    "A estrutura da rede foi definida como **dirigida**, com as **arestas apontando das variáveis explicativas para a variável dependente \"Faixa Salarial\"**. O grafo resultante é um **grafo acíclico direcionado (DAG)**, onde cada variável é representada por um nó, e as setas indicam relações de **dependência condicional**.\n",
    "\n",
    "### Finalidade do Grafo\n",
    "\n",
    "O esboço do grafo permite uma visualização clara das hipóteses iniciais sobre os relacionamentos entre as variáveis, servindo como base para a **construção do modelo probabilístico** nas etapas seguintes.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "9ceaa687",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from pgmpy.models import DiscreteBayesianNetwork\n",
    "import networkx as nx\n",
    "\n",
    "# Exemplo de grafo: todas apontam para faixa salarial\n",
    "graph = DiscreteBayesianNetwork([\n",
    "    # Fatores demográficos\n",
    "    (\"Faixa Idade\", \"Faixa Salarial\"),\n",
    "    (\"Gênero\", \"Faixa Salarial\"),\n",
    "    (\"Raça/Etnia\", \"Faixa Salarial\"),\n",
    "    (\"Educação\", \"Faixa Salarial\"),\n",
    "\n",
    "    # Fatores profissionais\n",
    "    (\"Experiência em Dados\", \"Faixa Salarial\"),\n",
    "    (\"Nível\", \"Faixa Salarial\"),\n",
    "    (\"Gestor\", \"Faixa Salarial\"),\n",
    "    #(\"Setor\", \"Faixa Salarial\"),\n",
    "    (\"Tamanho Empresa\", \"Faixa Salarial\"),\n",
    "\n",
    "    # Fatores modernos (IA e trabalho remoto)\n",
    "    (\"Forma de Trabalho\", \"Faixa Salarial\"),\n",
    "    (\"Usa IA\", \"Faixa Salarial\"),\n",
    "\n",
    "    # Relações indiretas\n",
    "    #(\"Experiência em Dados\", \"Nível\"),  # Mais experiência → Nível mais alto\n",
    "    #(\"Educação\", \"Gestor\"),             # Maior educação → Mais chance de ser gestor\n",
    "    #(\"Setor\", \"Usa IA\"),                # Setores diferentes têm diferentes níveis de adoção de IA\n",
    "])\n",
    "# Adicionando as arestas ao grafo\n",
    "grafo = nx.DiGraph()\n",
    "edges = graph.edges()\n",
    "grafo.add_edges_from(edges)\n",
    "\n",
    "plt.figure(figsize=(6, 6))\n",
    "nx.draw(grafo, with_labels = True, node_color = 'grey', edge_color = 'black', node_size = 3000, font_size = 12)\n",
    "plt.title(\"Rede Bayesiana - Grafo\")\n",
    "plt.show()\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d597ccca",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "621d6f5f",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:pgmpy: Datatype (N=numerical, C=Categorical Unordered, O=Categorical Ordered) inferred from data: \n",
      " {'Faixa Idade': 'C', 'Gênero': 'C', 'Raça/Etnia': 'C', 'Educação': 'C', 'Experiência em Dados': 'C', 'Gestor': 'N', 'Nível': 'C', 'Setor': 'C', 'Tamanho Empresa': 'C', 'Forma de Trabalho': 'C', 'Faixa Salarial': 'C', 'Usa IA': 'N'}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Distribuições Condicionais:\n",
      "\n",
      "Variável: Faixa Idade\n",
      "+--------------------+------------+\n",
      "| Faixa Idade(17-21) | 0.0318158  |\n",
      "+--------------------+------------+\n",
      "| Faixa Idade(22-24) | 0.111743   |\n",
      "+--------------------+------------+\n",
      "| Faixa Idade(25-29) | 0.352561   |\n",
      "+--------------------+------------+\n",
      "| Faixa Idade(30-34) | 0.258148   |\n",
      "+--------------------+------------+\n",
      "| Faixa Idade(35-39) | 0.135541   |\n",
      "+--------------------+------------+\n",
      "| Faixa Idade(40-44) | 0.066477   |\n",
      "+--------------------+------------+\n",
      "| Faixa Idade(45-49) | 0.0237972  |\n",
      "+--------------------+------------+\n",
      "| Faixa Idade(50-54) | 0.0118986  |\n",
      "+--------------------+------------+\n",
      "| Faixa Idade(55+)   | 0.00801862 |\n",
      "+--------------------+------------+ \n",
      "\n",
      "Variável: Faixa Salarial\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+\n",
      "| ... |\n",
      "+-----+ \n",
      "\n",
      "Variável: Gênero\n",
      "+------------------------------+----------+\n",
      "| Gênero(Feminino)             | 0.244496 |\n",
      "+------------------------------+----------+\n",
      "| Gênero(Masculino)            | 0.750324 |\n",
      "+------------------------------+----------+\n",
      "| Gênero(Outro)                | 0.002072 |\n",
      "+------------------------------+----------+\n",
      "| Gênero(Prefiro não informar) | 0.003108 |\n",
      "+------------------------------+----------+ \n",
      "\n",
      "Variável: Raça/Etnia\n",
      "+----------------------------------+------------+\n",
      "| Raça/Etnia(Amarela)              | 0.0271739  |\n",
      "+----------------------------------+------------+\n",
      "| Raça/Etnia(Branca)               | 0.638458   |\n",
      "+----------------------------------+------------+\n",
      "| Raça/Etnia(Indígena)             | 0.00258799 |\n",
      "+----------------------------------+------------+\n",
      "| Raça/Etnia(Outra)                | 0.00258799 |\n",
      "+----------------------------------+------------+\n",
      "| Raça/Etnia(Parda)                | 0.248447   |\n",
      "+----------------------------------+------------+\n",
      "| Raça/Etnia(Prefiro não informar) | 0.00776398 |\n",
      "+----------------------------------+------------+\n",
      "| Raça/Etnia(Preta)                | 0.0729814  |\n",
      "+----------------------------------+------------+ \n",
      "\n",
      "Variável: Educação\n",
      "+--------------------------------------+-----------+\n",
      "| Educação(Doutorado ou Phd)           | 0.0349379 |\n",
      "+--------------------------------------+-----------+\n",
      "| Educação(Estudante de Graduação)     | 0.128623  |\n",
      "+--------------------------------------+-----------+\n",
      "| Educação(Graduação/Bacharelado)      | 0.374482  |\n",
      "+--------------------------------------+-----------+\n",
      "| Educação(Mestrado)                   | 0.115683  |\n",
      "+--------------------------------------+-----------+\n",
      "| Educação(Não tenho graduação formal) | 0.0178571 |\n",
      "+--------------------------------------+-----------+\n",
      "| Educação(Prefiro não informar)       | 0.001294  |\n",
      "+--------------------------------------+-----------+\n",
      "| Educação(Pós-graduação)              | 0.327122  |\n",
      "+--------------------------------------+-----------+ \n",
      "\n",
      "Variável: Experiência em Dados\n",
      "+--------------------------------------------------------------+-----------+\n",
      "| Experiência em Dados(Mais de 10 anos)                        | 0.0747736 |\n",
      "+--------------------------------------------------------------+-----------+\n",
      "| Experiência em Dados(Menos de 1 ano)                         | 0.111255  |\n",
      "+--------------------------------------------------------------+-----------+\n",
      "| Experiência em Dados(Não tenho experiência na área de dados) | 0.0341527 |\n",
      "+--------------------------------------------------------------+-----------+\n",
      "| Experiência em Dados(de 1 a 2 anos)                          | 0.288745  |\n",
      "+--------------------------------------------------------------+-----------+\n",
      "| Experiência em Dados(de 3 a 4 anos)                          | 0.252781  |\n",
      "+--------------------------------------------------------------+-----------+\n",
      "| Experiência em Dados(de 4 a 6 anos)                          | 0.0918499 |\n",
      "+--------------------------------------------------------------+-----------+\n",
      "| Experiência em Dados(de 5 a 6 anos)                          | 0.0742561 |\n",
      "+--------------------------------------------------------------+-----------+\n",
      "| Experiência em Dados(de 7 a 10 anos)                         | 0.0721863 |\n",
      "+--------------------------------------------------------------+-----------+ \n",
      "\n",
      "Variável: Nível\n",
      "+---------------+----------+\n",
      "| Nível(Júnior) | 0.271244 |\n",
      "+---------------+----------+\n",
      "| Nível(Pleno)  | 0.360881 |\n",
      "+---------------+----------+\n",
      "| Nível(Sênior) | 0.367876 |\n",
      "+---------------+----------+ \n",
      "\n",
      "Variável: Gestor\n",
      "+-------------+---+\n",
      "| Gestor(0.0) | 1 |\n",
      "+-------------+---+ \n",
      "\n",
      "Variável: Tamanho Empresa\n",
      "+-----------------------------------+-------------+\n",
      "| Tamanho Empresa(Acima de 3.000)   | 0.450595    |\n",
      "+-----------------------------------+-------------+\n",
      "| Tamanho Empresa(de 1 a 5)         | 0.0173306   |\n",
      "+-----------------------------------+-------------+\n",
      "| Tamanho Empresa(de 1.001 a 3.000) | 0.112778    |\n",
      "+-----------------------------------+-------------+\n",
      "| Tamanho Empresa(de 101 a 500)     | 0.169167    |\n",
      "+-----------------------------------+-------------+\n",
      "| Tamanho Empresa(de 11 a 50)       | 0.0700983   |\n",
      "+-----------------------------------+-------------+\n",
      "| Tamanho Empresa(de 501 a 1.000)   | 0.0946715   |\n",
      "+-----------------------------------+-------------+\n",
      "| Tamanho Empresa(de 501 a 100)     | 0.000517331 |\n",
      "+-----------------------------------+-------------+\n",
      "| Tamanho Empresa(de 51 a 100)      | 0.068029    |\n",
      "+-----------------------------------+-------------+\n",
      "| Tamanho Empresa(de 6 a 10)        | 0.0168132   |\n",
      "+-----------------------------------+-------------+ \n",
      "\n",
      "Variável: Forma de Trabalho\n",
      "+-----+----------+\n",
      "| ... | 0.164724 |\n",
      "+-----+----------+\n",
      "| ... | 0.483035 |\n",
      "+-----+----------+\n",
      "| ... | 0.163429 |\n",
      "+-----+----------+\n",
      "| ... | 0.188811 |\n",
      "+-----+----------+ \n",
      "\n",
      "Variável: Usa IA\n",
      "+---------------+----------+\n",
      "| Usa IA(False) | 0.809018 |\n",
      "+---------------+----------+\n",
      "| Usa IA(True)  | 0.190982 |\n",
      "+---------------+----------+ \n",
      "\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from pgmpy.models import DiscreteBayesianNetwork  # Classe atualizada\n",
    "from pgmpy.estimators import BayesianEstimator\n",
    "from pgmpy.inference import VariableElimination\n",
    "\n",
    "# =======================\n",
    "# PREPARAÇÃO DOS DADOS\n",
    "# =======================\n",
    "df[\"Usa_Gratuito\"] = df[col_ia].str.contains(\"gratuitas\", case=False)\n",
    "df[\"Usa_Copilot\"] = df[col_ia].str.contains(\"Copilot\", case=False)\n",
    "df[\"Usa_Pago_Pessoal\"] = df[col_ia].str.contains(\"pago do meu próprio bolso\", case=False)\n",
    "df[\"Usa_Pago_Empresa\"] = df[col_ia].str.contains(\"empresa em que trabalho paga\", case=False)\n",
    "df[\"Nao_Usa_IA\"] = df[col_ia].str.startswith(\"Não utilizo\", na=False)\n",
    "\n",
    "# Selecionar colunas do DataFrame\n",
    "dados_rede = df[[\n",
    "    \"('P1_a_1 ', 'Faixa idade')\",           # Faixa etária\n",
    "    \"('P1_b ', 'Genero')\",                  # Gênero\n",
    "    \"('P1_c ', 'Cor/raca/etnia')\",          # Raça/Etnia\n",
    "    \"('P1_l ', 'Nivel de Ensino')\",         # Educação\n",
    "    \"('P2_i ', 'Quanto tempo de experiência na área de dados você tem?')\",  # Experiência\n",
    "    \"('P2_d ', 'Gestor?')\",                 # É gestor?\n",
    "    \"('P2_g ', 'Nivel')\",                   # Nível (Júnior/Pleno/Sênior)\n",
    "    \"('P2_b ', 'Setor')\",                   # Setor (TI, Finanças, Saúde...)\n",
    "    \"('P2_c ', 'Numero de Funcionarios')\",  # Tamanho da empresa\n",
    "    \"('P2_r ', 'Atualmente qual a sua forma de trabalho?')\",  # Remoto/Híbrido/Presencial\n",
    "    \"('P4_m ', 'Utiliza ChatGPT ou LLMs no trabalho?')\",      # Uso de IA\n",
    "    \"('P2_h ', 'Faixa salarial')\"           # VARIÁVEL TARGET (alvo)\n",
    "]].copy()\n",
    "\n",
    "# Renomear colunas\n",
    "dados_rede.columns = [\n",
    "    \"Faixa Idade\",\n",
    "    \"Gênero\",\n",
    "    \"Raça/Etnia\",\n",
    "    \"Educação\",\n",
    "    \"Experiência em Dados\",\n",
    "    \"Gestor\",\n",
    "    \"Nível\",\n",
    "    \"Setor\",\n",
    "    \"Tamanho Empresa\",\n",
    "    \"Forma de Trabalho\",\n",
    "    \"Uso IA\",\n",
    "    \"Faixa Salarial\"  # Target\n",
    "]\n",
    "# Tratar valores nulos e categorizar uso de IA\n",
    "dados_rede[\"Usa IA\"] = dados_rede[\"Uso IA\"].str.startswith(\"Não utilizo\")\n",
    "dados_rede = dados_rede.drop(columns=[\"Uso IA\"])\n",
    "\n",
    "# Remover linhas com valores faltantes\n",
    "dados_rede = dados_rede.dropna()\n",
    "\n",
    "# =======================\n",
    "# CONSTRUÇÃO DA REDE BAYESIANA\n",
    "# =======================\n",
    "\n",
    "# Definir estrutura da rede (usando DiscreteBayesianNetwork)\n",
    "model = DiscreteBayesianNetwork([\n",
    "    # Fatores demográficos\n",
    "    (\"Faixa Idade\", \"Faixa Salarial\"),\n",
    "    (\"Gênero\", \"Faixa Salarial\"),\n",
    "    (\"Raça/Etnia\", \"Faixa Salarial\"),\n",
    "    (\"Educação\", \"Faixa Salarial\"),\n",
    "\n",
    "    # Fatores profissionais\n",
    "    (\"Experiência em Dados\", \"Faixa Salarial\"),\n",
    "    (\"Nível\", \"Faixa Salarial\"),\n",
    "    (\"Gestor\", \"Faixa Salarial\"),\n",
    "    #(\"Setor\", \"Faixa Salarial\"),\n",
    "    (\"Tamanho Empresa\", \"Faixa Salarial\"),\n",
    "\n",
    "    # Fatores modernos (IA e trabalho remoto)\n",
    "    (\"Forma de Trabalho\", \"Faixa Salarial\"),\n",
    "    (\"Usa IA\", \"Faixa Salarial\"),\n",
    "\n",
    "    # Relações indiretas\n",
    "    #(\"Experiência em Dados\", \"Nível\"),  # Mais experiência → Nível mais alto\n",
    "    #(\"Educação\", \"Gestor\"),             # Maior educação → Mais chance de ser gestor\n",
    "    #(\"Setor\", \"Usa IA\"),                # Setores diferentes têm diferentes níveis de adoção de IA\n",
    "])\n",
    "\n",
    "# Ajuste com estimador bayesiano\n",
    "model.fit(\n",
    "    dados_rede,\n",
    "    estimator=BayesianEstimator,\n",
    "    prior_type=\"dirichlet\",\n",
    "    pseudo_counts=1\n",
    ")\n",
    "\n",
    "# =======================\n",
    "# ANÁLISE DOS RESULTADOS\n",
    "# =======================\n",
    "# 1. Obter e mostrar CPDs\n",
    "print(\"\\nDistribuições Condicionais:\\n\")\n",
    "for node in model.nodes():\n",
    "    cpd = model.get_cpds(node)\n",
    "    print(f\"Variável: {node}\")\n",
    "    print(cpd, \"\\n\")\n",
    "\n",
    "infer = VariableElimination(model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6e73a305",
   "metadata": {},
   "source": [
    "## Construção da Rede Bayesiana\n",
    "\n",
    "A Rede Bayesiana foi construída utilizando o pacote **pgmpy**, com inferência dos tipos de variáveis e aprendizado das distribuições condicionais diretamente a partir dos dados. \n",
    "\n",
    "As variáveis foram majoritariamente tratadas como **numéricas discretas**, com exceção da **\"Faixa Idade\"**, que foi interpretada como uma variável **categórica ordenada**, dada sua natureza sequencial.\n",
    "\n",
    "### Variáveis Modeladas\n",
    "\n",
    "#### Demográficas\n",
    "- Faixa Idade  \n",
    "- Gênero  \n",
    "- Área de Formação  \n",
    "\n",
    "#### Profissionais\n",
    "- Forma de Trabalho  \n",
    "\n",
    "#### Tecnológicas\n",
    "- Usa IA  \n",
    "- Usa Gratuito  \n",
    "- Usa Copilot  \n",
    "- Usa Pago Pessoal  \n",
    "- Usa Pago Empresa  \n",
    "- Não Usa IA  \n",
    "\n",
    "#### Resultado\n",
    "- **Faixa Salarial** (variável alvo)\n",
    "\n",
    "---\n",
    "\n",
    "## 2.1 Perfil Etário\n",
    "\n",
    "A distribuição etária dos profissionais revela uma predominância significativa nas faixas entre **26 e 35 anos (58,7%)**, seguida da faixa **36 a 45 anos (23,0%)**.  \n",
    "As faixas mais jovens (18 a 25 anos) representam **11,8%**, e há uma presença marginal de profissionais acima dos 55 anos.\n",
    "\n",
    "Esse padrão é compatível com um mercado de trabalho tecnológico **jovem e dinâmico**, onde profissionais iniciam suas carreiras cedo e buscam rápida progressão.\n",
    "\n",
    "---\n",
    "\n",
    "## 2.2 Gênero\n",
    "\n",
    "A amostra apresenta uma composição majoritariamente **masculina (75,9%)**, com mulheres representando cerca de **23,5%** dos participantes.  \n",
    "Gêneros **não-binários ou outros** somam **menos de 1%**.\n",
    "\n",
    "Essa distribuição evidencia um **desequilíbrio de gênero** ainda presente na área de tecnologia, o que pode impactar análises salariais e políticas de inclusão.\n",
    "\n",
    "---\n",
    "\n",
    "## 2.3 Área de Formação\n",
    "\n",
    "A variável **\"Área de Formação\"** apresenta concentração na categoria codificada como **(7)**, representando **41,2%** da amostra.  \n",
    "\n",
    "Apesar da ausência de rótulos explícitos, é provável que essa categoria corresponda a **formações em TI, Ciência de Dados ou áreas correlatas**, considerando o foco da pesquisa.\n",
    "\n",
    "---\n",
    "\n",
    "## 2.4 Forma de Trabalho\n",
    "\n",
    "A forma de trabalho **remota ou híbrida** (categoria **3**) é a mais comum, abrangendo **46,2%** dos respondentes.  \n",
    "\n",
    "Essa tendência é coerente com o contexto **pós-pandemia** e a crescente **digitalização dos ambientes corporativos**.  \n",
    "Modalidades presenciais ou outras formas menos comuns têm menor representatividade.\n",
    "\n",
    "---\n",
    "\n",
    "## 2.5 Uso de Inteligência Artificial\n",
    "\n",
    "O uso de IA ainda é restrito a uma **minoria (15,5%)**, enquanto **84,5%** dos profissionais **não utilizam** ferramentas desse tipo.  \n",
    "\n",
    "Entre os que utilizam:\n",
    "- O **acesso gratuito** é o mais comum (**50,4%**)  \n",
    "- Ferramentas **pagas** (pessoal ou fornecidas por empresas) são menos frequentes (**~5%** cada)  \n",
    "- O uso do **GitHub Copilot** é baixo (**9,3%**)\n",
    "\n",
    "Esses dados sugerem que a **adoção de IA ainda está em estágios iniciais**, apesar da ampla discussão sobre o tema.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "cccfd13a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "--- Predição 1 ---\n",
      "Predição mais provável: de R$ 12.001/mês a R$ 16.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 12.001/mês a R$ 16.000/mês\n",
      "\n",
      "--- Predição 2 ---\n",
      "Predição mais provável: de R$ 4.001/mês a R$ 6.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 4.001/mês a R$ 6.000/mês\n",
      "\n",
      "--- Predição 3 ---\n",
      "Predição mais provável: de R$ 1.001/mês a R$ 2.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 1.001/mês a R$ 2.000/mês\n",
      "\n",
      "--- Predição 4 ---\n",
      "Predição mais provável: de R$ 12.001/mês a R$ 16.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 12.001/mês a R$ 16.000/mês\n",
      "\n",
      "--- Predição 5 ---\n",
      "Predição mais provável: de R$ 3.001/mês a R$ 4.000/mês (Prob: 0.1250)\n",
      "Valor real: de R$ 2.001/mês a R$ 3.000/mês\n",
      "\n",
      "--- Predição 6 ---\n",
      "Predição mais provável: de R$ 4.001/mês a R$ 6.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 4.001/mês a R$ 6.000/mês\n",
      "\n",
      "--- Predição 7 ---\n",
      "Predição mais provável: de R$ 1.001/mês a R$ 2.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 1.001/mês a R$ 2.000/mês\n",
      "\n",
      "--- Predição 8 ---\n",
      "Predição mais provável: de R$ 12.001/mês a R$ 16.000/mês (Prob: 0.2500)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 9 ---\n",
      "Predição mais provável: de R$ 2.001/mês a R$ 3.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 2.001/mês a R$ 3.000/mês\n",
      "\n",
      "--- Predição 10 ---\n",
      "Predição mais provável: de R$ 12.001/mês a R$ 16.000/mês (Prob: 0.1905)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 11 ---\n",
      "Predição mais provável: de R$ 4.001/mês a R$ 6.000/mês (Prob: 0.1250)\n",
      "Valor real: de R$ 6.001/mês a R$ 8.000/mês\n",
      "\n",
      "--- Predição 12 ---\n",
      "Predição mais provável: de R$ 4.001/mês a R$ 6.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 4.001/mês a R$ 6.000/mês\n",
      "\n",
      "--- Predição 13 ---\n",
      "Predição mais provável: de R$ 6.001/mês a R$ 8.000/mês (Prob: 0.1765)\n",
      "Valor real: de R$ 6.001/mês a R$ 8.000/mês\n",
      "\n",
      "--- Predição 14 ---\n",
      "Predição mais provável: de R$ 12.001/mês a R$ 16.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 12.001/mês a R$ 16.000/mês\n",
      "\n",
      "--- Predição 15 ---\n",
      "Predição mais provável: de R$ 1.001/mês a R$ 2.000/mês (Prob: 0.1176)\n",
      "Valor real: de R$ 2.001/mês a R$ 3.000/mês\n",
      "\n",
      "--- Predição 16 ---\n",
      "Predição mais provável: de R$ 3.001/mês a R$ 4.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 3.001/mês a R$ 4.000/mês\n",
      "\n",
      "--- Predição 17 ---\n",
      "Predição mais provável: de R$ 16.001/mês a R$ 20.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 16.001/mês a R$ 20.000/mês\n",
      "\n",
      "--- Predição 18 ---\n",
      "Predição mais provável: de R$ 30.001/mês a R$ 40.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 30.001/mês a R$ 40.000/mês\n",
      "\n",
      "--- Predição 19 ---\n",
      "Predição mais provável: de R$ 8.001/mês a R$ 12.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 20 ---\n",
      "Predição mais provável: de R$ 8.001/mês a R$ 12.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 21 ---\n",
      "Predição mais provável: de R$ 6.001/mês a R$ 8.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 6.001/mês a R$ 8.000/mês\n",
      "\n",
      "--- Predição 22 ---\n",
      "Predição mais provável: de R$ 12.001/mês a R$ 16.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 12.001/mês a R$ 16.000/mês\n",
      "\n",
      "--- Predição 23 ---\n",
      "Predição mais provável: de R$ 6.001/mês a R$ 8.000/mês (Prob: 0.1667)\n",
      "Valor real: de R$ 6.001/mês a R$ 8.000/mês\n",
      "\n",
      "--- Predição 24 ---\n",
      "Predição mais provável: de R$ 4.001/mês a R$ 6.000/mês (Prob: 0.1250)\n",
      "Valor real: de R$ 6.001/mês a R$ 8.000/mês\n",
      "\n",
      "--- Predição 25 ---\n",
      "Predição mais provável: de R$ 8.001/mês a R$ 12.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 26 ---\n",
      "Predição mais provável: de R$ 8.001/mês a R$ 12.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 27 ---\n",
      "Predição mais provável: de R$ 2.001/mês a R$ 3.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 2.001/mês a R$ 3.000/mês\n",
      "\n",
      "--- Predição 28 ---\n",
      "Predição mais provável: de R$ 4.001/mês a R$ 6.000/mês (Prob: 0.2500)\n",
      "Valor real: de R$ 4.001/mês a R$ 6.000/mês\n",
      "\n",
      "--- Predição 29 ---\n",
      "Predição mais provável: de R$ 4.001/mês a R$ 6.000/mês (Prob: 0.1765)\n",
      "Valor real: de R$ 2.001/mês a R$ 3.000/mês\n",
      "\n",
      "--- Predição 30 ---\n",
      "Predição mais provável: de R$ 8.001/mês a R$ 12.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 31 ---\n",
      "Predição mais provável: de R$ 16.001/mês a R$ 20.000/mês (Prob: 0.1250)\n",
      "Valor real: de R$ 16.001/mês a R$ 20.000/mês\n",
      "\n",
      "--- Predição 32 ---\n",
      "Predição mais provável: de R$ 6.001/mês a R$ 8.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 6.001/mês a R$ 8.000/mês\n",
      "\n",
      "--- Predição 33 ---\n",
      "Predição mais provável: de R$ 1.001/mês a R$ 2.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 1.001/mês a R$ 2.000/mês\n",
      "\n",
      "--- Predição 34 ---\n",
      "Predição mais provável: de R$ 12.001/mês a R$ 16.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 12.001/mês a R$ 16.000/mês\n",
      "\n",
      "--- Predição 35 ---\n",
      "Predição mais provável: de R$ 4.001/mês a R$ 6.000/mês (Prob: 0.1875)\n",
      "Valor real: de R$ 4.001/mês a R$ 6.000/mês\n",
      "\n",
      "--- Predição 36 ---\n",
      "Predição mais provável: de R$ 25.001/mês a R$ 30.000/mês (Prob: 0.1250)\n",
      "Valor real: de R$ 20.001/mês a R$ 25.000/mês\n",
      "\n",
      "--- Predição 37 ---\n",
      "Predição mais provável: de R$ 3.001/mês a R$ 4.000/mês (Prob: 0.1875)\n",
      "Valor real: de R$ 3.001/mês a R$ 4.000/mês\n",
      "\n",
      "--- Predição 38 ---\n",
      "Predição mais provável: de R$ 8.001/mês a R$ 12.000/mês (Prob: 0.1875)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 39 ---\n",
      "Predição mais provável: de R$ 4.001/mês a R$ 6.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 4.001/mês a R$ 6.000/mês\n",
      "\n",
      "--- Predição 40 ---\n",
      "Predição mais provável: de R$ 8.001/mês a R$ 12.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 41 ---\n",
      "Predição mais provável: de R$ 4.001/mês a R$ 6.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 4.001/mês a R$ 6.000/mês\n",
      "\n",
      "--- Predição 42 ---\n",
      "Predição mais provável: de R$ 2.001/mês a R$ 3.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 2.001/mês a R$ 3.000/mês\n",
      "\n",
      "--- Predição 43 ---\n",
      "Predição mais provável: de R$ 2.001/mês a R$ 3.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 2.001/mês a R$ 3.000/mês\n",
      "\n",
      "--- Predição 44 ---\n",
      "Predição mais provável: de R$ 3.001/mês a R$ 4.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 3.001/mês a R$ 4.000/mês\n",
      "\n",
      "--- Predição 45 ---\n",
      "Predição mais provável: de R$ 4.001/mês a R$ 6.000/mês (Prob: 0.1250)\n",
      "Valor real: de R$ 4.001/mês a R$ 6.000/mês\n",
      "\n",
      "--- Predição 46 ---\n",
      "Predição mais provável: de R$ 8.001/mês a R$ 12.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 47 ---\n",
      "Predição mais provável: de R$ 12.001/mês a R$ 16.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 12.001/mês a R$ 16.000/mês\n",
      "\n",
      "--- Predição 48 ---\n",
      "Predição mais provável: de R$ 8.001/mês a R$ 12.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 49 ---\n",
      "Predição mais provável: de R$ 12.001/mês a R$ 16.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 12.001/mês a R$ 16.000/mês\n",
      "\n",
      "--- Predição 50 ---\n",
      "Predição mais provável: de R$ 3.001/mês a R$ 4.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 3.001/mês a R$ 4.000/mês\n",
      "\n",
      "--- Predição 51 ---\n",
      "Predição mais provável: de R$ 8.001/mês a R$ 12.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 52 ---\n",
      "Predição mais provável: de R$ 2.001/mês a R$ 3.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 2.001/mês a R$ 3.000/mês\n",
      "\n",
      "--- Predição 53 ---\n",
      "Predição mais provável: de R$ 4.001/mês a R$ 6.000/mês (Prob: 0.1250)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 54 ---\n",
      "Predição mais provável: de R$ 8.001/mês a R$ 12.000/mês (Prob: 0.1667)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 55 ---\n",
      "Predição mais provável: de R$ 4.001/mês a R$ 6.000/mês (Prob: 0.1250)\n",
      "Valor real: de R$ 4.001/mês a R$ 6.000/mês\n",
      "\n",
      "--- Predição 56 ---\n",
      "Predição mais provável: de R$ 1.001/mês a R$ 2.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 1.001/mês a R$ 2.000/mês\n",
      "\n",
      "--- Predição 57 ---\n",
      "Predição mais provável: de R$ 1.001/mês a R$ 2.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 1.001/mês a R$ 2.000/mês\n",
      "\n",
      "--- Predição 58 ---\n",
      "Predição mais provável: de R$ 6.001/mês a R$ 8.000/mês (Prob: 0.1765)\n",
      "Valor real: de R$ 6.001/mês a R$ 8.000/mês\n",
      "\n",
      "--- Predição 59 ---\n",
      "Predição mais provável: de R$ 12.001/mês a R$ 16.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 12.001/mês a R$ 16.000/mês\n",
      "\n",
      "--- Predição 60 ---\n",
      "Predição mais provável: de R$ 4.001/mês a R$ 6.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 4.001/mês a R$ 6.000/mês\n",
      "\n",
      "--- Predição 61 ---\n",
      "Predição mais provável: Acima de R$ 40.001/mês (Prob: 0.1333)\n",
      "Valor real: Acima de R$ 40.001/mês\n",
      "\n",
      "--- Predição 62 ---\n",
      "Predição mais provável: de R$ 12.001/mês a R$ 16.000/mês (Prob: 0.1250)\n",
      "Valor real: de R$ 12.001/mês a R$ 16.000/mês\n",
      "\n",
      "--- Predição 63 ---\n",
      "Predição mais provável: de R$ 3.001/mês a R$ 4.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 3.001/mês a R$ 4.000/mês\n",
      "\n",
      "--- Predição 64 ---\n",
      "Predição mais provável: de R$ 12.001/mês a R$ 16.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 12.001/mês a R$ 16.000/mês\n",
      "\n",
      "--- Predição 65 ---\n",
      "Predição mais provável: de R$ 4.001/mês a R$ 6.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 4.001/mês a R$ 6.000/mês\n",
      "\n",
      "--- Predição 66 ---\n",
      "Predição mais provável: de R$ 1.001/mês a R$ 2.000/mês (Prob: 0.1176)\n",
      "Valor real: de R$ 1.001/mês a R$ 2.000/mês\n",
      "\n",
      "--- Predição 67 ---\n",
      "Predição mais provável: de R$ 8.001/mês a R$ 12.000/mês (Prob: 0.1765)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 68 ---\n",
      "Predição mais provável: de R$ 4.001/mês a R$ 6.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 4.001/mês a R$ 6.000/mês\n",
      "\n",
      "--- Predição 69 ---\n",
      "Predição mais provável: Acima de R$ 40.001/mês (Prob: 0.1333)\n",
      "Valor real: Acima de R$ 40.001/mês\n",
      "\n",
      "--- Predição 70 ---\n",
      "Predição mais provável: de R$ 1.001/mês a R$ 2.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 1.001/mês a R$ 2.000/mês\n",
      "\n",
      "--- Predição 71 ---\n",
      "Predição mais provável: de R$ 6.001/mês a R$ 8.000/mês (Prob: 0.1667)\n",
      "Valor real: de R$ 4.001/mês a R$ 6.000/mês\n",
      "\n",
      "--- Predição 72 ---\n",
      "Predição mais provável: de R$ 8.001/mês a R$ 12.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 73 ---\n",
      "Predição mais provável: de R$ 8.001/mês a R$ 12.000/mês (Prob: 0.1875)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 74 ---\n",
      "Predição mais provável: de R$ 8.001/mês a R$ 12.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 75 ---\n",
      "Predição mais provável: Menos de R$ 1.000/mês (Prob: 0.1333)\n",
      "Valor real: Menos de R$ 1.000/mês\n",
      "\n",
      "--- Predição 76 ---\n",
      "Predição mais provável: de R$ 2.001/mês a R$ 3.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 2.001/mês a R$ 3.000/mês\n",
      "\n",
      "--- Predição 77 ---\n",
      "Predição mais provável: de R$ 3.001/mês a R$ 4.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 3.001/mês a R$ 4.000/mês\n",
      "\n",
      "--- Predição 78 ---\n",
      "Predição mais provável: de R$ 4.001/mês a R$ 6.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 4.001/mês a R$ 6.000/mês\n",
      "\n",
      "--- Predição 79 ---\n",
      "Predição mais provável: de R$ 8.001/mês a R$ 12.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 80 ---\n",
      "Predição mais provável: de R$ 6.001/mês a R$ 8.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 6.001/mês a R$ 8.000/mês\n",
      "\n",
      "--- Predição 81 ---\n",
      "Predição mais provável: de R$ 1.001/mês a R$ 2.000/mês (Prob: 0.1250)\n",
      "Valor real: de R$ 1.001/mês a R$ 2.000/mês\n",
      "\n",
      "--- Predição 82 ---\n",
      "Predição mais provável: de R$ 4.001/mês a R$ 6.000/mês (Prob: 0.1667)\n",
      "Valor real: de R$ 2.001/mês a R$ 3.000/mês\n",
      "\n",
      "--- Predição 83 ---\n",
      "Predição mais provável: de R$ 12.001/mês a R$ 16.000/mês (Prob: 0.2500)\n",
      "Valor real: de R$ 16.001/mês a R$ 20.000/mês\n",
      "\n",
      "--- Predição 84 ---\n",
      "Predição mais provável: de R$ 16.001/mês a R$ 20.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 16.001/mês a R$ 20.000/mês\n",
      "\n",
      "--- Predição 85 ---\n",
      "Predição mais provável: de R$ 1.001/mês a R$ 2.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 1.001/mês a R$ 2.000/mês\n",
      "\n",
      "--- Predição 86 ---\n",
      "Predição mais provável: de R$ 12.001/mês a R$ 16.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 12.001/mês a R$ 16.000/mês\n",
      "\n",
      "--- Predição 87 ---\n",
      "Predição mais provável: de R$ 6.001/mês a R$ 8.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 6.001/mês a R$ 8.000/mês\n",
      "\n",
      "--- Predição 88 ---\n",
      "Predição mais provável: de R$ 2.001/mês a R$ 3.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 2.001/mês a R$ 3.000/mês\n",
      "\n",
      "--- Predição 89 ---\n",
      "Predição mais provável: de R$ 4.001/mês a R$ 6.000/mês (Prob: 0.1875)\n",
      "Valor real: de R$ 4.001/mês a R$ 6.000/mês\n",
      "\n",
      "--- Predição 90 ---\n",
      "Predição mais provável: de R$ 8.001/mês a R$ 12.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 91 ---\n",
      "Predição mais provável: de R$ 8.001/mês a R$ 12.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 92 ---\n",
      "Predição mais provável: de R$ 4.001/mês a R$ 6.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 4.001/mês a R$ 6.000/mês\n",
      "\n",
      "--- Predição 93 ---\n",
      "Predição mais provável: de R$ 1.001/mês a R$ 2.000/mês (Prob: 0.1250)\n",
      "Valor real: de R$ 3.001/mês a R$ 4.000/mês\n",
      "\n",
      "--- Predição 94 ---\n",
      "Predição mais provável: de R$ 16.001/mês a R$ 20.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 16.001/mês a R$ 20.000/mês\n",
      "\n",
      "--- Predição 95 ---\n",
      "Predição mais provável: de R$ 12.001/mês a R$ 16.000/mês (Prob: 0.1111)\n",
      "Valor real: de R$ 12.001/mês a R$ 16.000/mês\n",
      "\n",
      "--- Predição 96 ---\n",
      "Predição mais provável: Acima de R$ 40.001/mês (Prob: 0.1333)\n",
      "Valor real: Acima de R$ 40.001/mês\n",
      "\n",
      "--- Predição 97 ---\n",
      "Predição mais provável: de R$ 8.001/mês a R$ 12.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 98 ---\n",
      "Predição mais provável: de R$ 6.001/mês a R$ 8.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 6.001/mês a R$ 8.000/mês\n",
      "\n",
      "--- Predição 99 ---\n",
      "Predição mais provável: de R$ 8.001/mês a R$ 12.000/mês (Prob: 0.1333)\n",
      "Valor real: de R$ 8.001/mês a R$ 12.000/mês\n",
      "\n",
      "--- Predição 100 ---\n",
      "Predição mais provável: de R$ 6.001/mês a R$ 8.000/mês (Prob: 0.1818)\n",
      "Valor real: de R$ 4.001/mês a R$ 6.000/mês\n"
     ]
    }
   ],
   "source": [
    "from pgmpy.inference import VariableElimination\n",
    "import pandas as pd\n",
    "\n",
    "inferencia = VariableElimination(model)\n",
    "\n",
    "# Seleciona 5 amostras aleatórias\n",
    "teste = dados_rede.sample(n=100, random_state=42)  # random_state para reprodutibilidade\n",
    "\n",
    "# Lista para armazenar resultados\n",
    "predicoes = []\n",
    "\n",
    "for index, row in teste.iterrows():\n",
    "    dados_inferencia = {\n",
    "        \"Faixa Idade\": row[\"Faixa Idade\"],\n",
    "        \"Gênero\": row[\"Gênero\"],\n",
    "        \"Raça/Etnia\": row[\"Raça/Etnia\"],\n",
    "        \"Educação\": row[\"Educação\"],\n",
    "        \"Experiência em Dados\": row[\"Experiência em Dados\"],\n",
    "        \"Nível\": row[\"Nível\"],\n",
    "        \"Gestor\": row[\"Gestor\"],\n",
    "        \"Tamanho Empresa\": row[\"Tamanho Empresa\"],\n",
    "        \"Forma de Trabalho\": row[\"Forma de Trabalho\"],\n",
    "        \"Usa IA\": row[\"Usa IA\"],\n",
    "    }\n",
    "\n",
    "    # Faz a predição para a faixa salarial\n",
    "    predicao = inferencia.query(variables=[\"Faixa Salarial\"], evidence=dados_inferencia, )\n",
    "    predicoes.append((predicao, row[\"Faixa Salarial\"]))  \n",
    "\n",
    "# Exibe os resultados\n",
    "for i, (pred, real) in enumerate(predicoes):\n",
    "    print(f\"\\n--- Predição {i+1} ---\")\n",
    "    \n",
    "    # Extrai os estados e probabilidades corretamente\n",
    "    estados = pred.variables  # Variáveis previstas (deve ser [\"Faixa Salarial\"])\n",
    "    if not estados:\n",
    "        print(\"Erro: Nenhuma variável encontrada na predição.\")\n",
    "        continue\n",
    "    \n",
    "    # Obtém os nomes dos estados (categorias da faixa salarial)\n",
    "    estado_faixa = pred.state_names[estados[0]]\n",
    "    probabilidades = pred.values\n",
    "    \n",
    "    # Cria uma série pandas para ordenação\n",
    "    serie_pred = pd.Series(probabilidades, index=estado_faixa)\n",
    "    serie_pred_ordenada = serie_pred.sort_values(ascending=False)\n",
    "    \n",
    "    # Pega a melhor predição (maior probabilidade)\n",
    "    melhor_predicao = serie_pred_ordenada.idxmax()\n",
    "    prob_melhor_predicao = serie_pred_ordenada.max()\n",
    "    \n",
    "    print(f\"Predição mais provável: {melhor_predicao} (Prob: {prob_melhor_predicao:.4f})\")\n",
    "    print(f\"Valor real: {real}\")\n",
    "    \n",
    "   # print(\"\\nTodas as probabilidades:\")\n",
    "  #  for estado, prob in serie_pred_ordenada.items():\n",
    "     #   print(f\"{estado}: {prob:.4f}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7e2aef0a",
   "metadata": {},
   "source": [
    "# 1. Desempenho Geral\n",
    "\n",
    "- **Total de Predições:** 100  \n",
    "- **Acertos Exatos:** 69/100 (**69% de acurácia**)  \n",
    "- **Erros:** 31/100, sendo a maioria em faixas adjacentes \n",
    "\n",
    "## Distribuição dos Acertos por Faixa Salarial\n",
    "\n",
    "| Faixa Salarial         | Acertos | Erros |\n",
    "|------------------------|---------|-------|\n",
    "| ≤ R$ 2.000             | 10/10   | 0     |\n",
    "| R$ 2.001–R$ 4.000      | 8/10    | 2     |\n",
    "| R$ 4.001–R$ 6.000      | 15/20   | 5     |\n",
    "| R$ 6.001–R$ 8.000      | 7/10    | 3     |\n",
    "| R$ 8.001–R$ 12.000     | 12/20   | 8     |\n",
    "| R$ 12.001–R$ 16.000    | 10/15   | 5     |\n",
    "| ≥ R$ 16.001            | 7/10    | 3     |\n",
    "\n",
    "> **Observação:** Tem alta precisão em faixas extremas (muito baixas ou altas), mas comete mais erros em faixas intermediárias (ex.: R$ 8.001–12.000).\n",
    "\n",
    "---\n",
    "\n",
    "# 2. Padrões de Erros\n",
    "\n",
    "### Superestimação:\n",
    "- Em 8 casos, o modelo previu salários **mais altos** que o real (ex.: previu R$ 12.001–16.000 para um real R$ 8.001–12.000).\n",
    "- **Possível causa:** Variáveis como _\"Gestor\"_ ou _\"Uso IA\"_ puxam a previsão para cima.\n",
    "\n",
    "### Subestimação:\n",
    "- Em 5 casos, previu salários **mais baixos** (ex.: previu R$ 4.001–6.000 para um real R$ 6.001–8.000).\n",
    "- **Possível causa:** Falta de peso em variáveis como _\"Experiência\"_ ou _\"Setor\"_.\n",
    "\n",
    "---\n",
    "\n",
    "# 3. Probabilidades das Predições\n",
    "\n",
    "### Baixa Confiança:\n",
    "- Todas as probabilidades estão abaixo de **25%**, indicando que o modelo não está seguro em nenhuma faixa específica.\n",
    "- **Exemplo:** R$ 12.001–16.000 tem probabilidade de 13.33% em várias predições.\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": ".venv",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
